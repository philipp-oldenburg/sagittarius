package project.sagittarius.client;
import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.hardware.Camera;
import android.hardware.Camera.CameraInfo;
import android.hardware.Camera.PictureCallback;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;


@SuppressWarnings("deprecation")
public class MainActivity extends Activity {
	
    private EditText tf_connect;
    private Activity activity;
	private Camera camera;
	private Connecter connecter;

	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
    	findViewById(R.id.bt_connect).setOnClickListener(new OnClickListener() {
    		
			public void onClick(View v) {
				connecter = new Connecter(activity);
				connecter.execute(tf_connect.getText().toString());
			}
    	});
    	
    	findViewById(R.id.bt_connect).setOnClickListener(new OnClickListener() {
    		
			public void onClick(View v) {
				
			}
    	});
        
    }
	
	
	private int findFrontFacingCamera() {
		int cameraId = -1;
		// Search for the front facing camera
		int numberOfCameras = Camera.getNumberOfCameras();
		for (int i = 0; i < numberOfCameras; i++) {
			CameraInfo info = new CameraInfo();
			Camera.getCameraInfo(i, info);
			if (info.facing == CameraInfo.CAMERA_FACING_BACK) {
				Log.d("debug", "Camera found");
				cameraId = i;
				break;
			}
		}
		return cameraId;
	}
	
	private void makePicture() {
		try {
			camera = Camera.open(findFrontFacingCamera());
			SurfaceView mview = new SurfaceView(getApplicationContext());
			camera.setPreviewDisplay(mview.getHolder());
			
			camera.startPreview();
			
			
			camera.takePicture(null, null, new PictureCallback() {
				
				@Override
				public void onPictureTaken(byte[] data, Camera camera) {
					connecter.sendData(data);
					Log.d("debug", "picture taken length:" + data.length);
					Bitmap bm = BitmapFactory.decodeByteArray(data, 0, data.length);
					Log.d("debug", "width:" + bm.getWidth() + "height:" + bm.getHeight());
					((ImageView)findViewById(R.id.iv_picture)).setImageBitmap(bm);
				}
			});
		} catch (Exception e) {
			Log.d("debug", "test");
		}
        
        Log.d("debug", "ran through stuff");
	}
    
    


	@Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
