import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.BitSet;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

import org.imgscalr.Scalr;


public class Server {
	
	private DataInputStream in;

	public static void main(String[] args) {
		new Server().run();
	}

	private void run() {
		ServerSocket server = null;
		try{
		   server = new ServerSocket(4321); 
		} catch (IOException e) {
		   System.out.println("Could not listen on port 4321");
		}
		
		System.out.println("Listening on port 4321");
		Socket client = null;

		try{
		   client = server.accept();
		} catch (IOException e) {
		   System.out.println("Accept failed: 4321");
		}
		
		System.out.println("Connected to:" + client.getLocalAddress());
		
		try{
		   in = new DataInputStream(client.getInputStream());
		} catch (IOException e) {
		   System.out.println("Read failed");
		}
		try {
			int length = in.readInt();
			System.out.println("empfange daten");
			if(length>0) {
			    byte[] message = new byte[length];
			    in.readFully(message, 0, message.length);
			    System.out.println(message.length);
			    JFrame frame = new JFrame();
			    JPanel panel = new JPanel();
			    ImageIcon icon = new ImageIcon(message);
			    BufferedImage img = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
			    img.getGraphics().drawImage(icon.getImage(), 0,0);
			    BufferedImage img = Scalr.resize(icon, 150);
			    JLabel picLabel = new JLabel(icon);
			    panel.add(picLabel);
			    frame.add(panel);
			    frame.setVisible(true);
			    
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
